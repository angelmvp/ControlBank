---
import Boton from "../components/Boton.astro"
import Layout from "../layouts/Layout.astro"
import FormLabelRequired from "../components/Apuestalabel.astro"
import BotonSubmit from "../components/BotonSubmit.astro"
---

<Layout title="Nueva Apuesta">
    <Boton href="menu" title="regresar" color="verde" />
    <form class="form-apuesta" id="form-apuesta">
        <div id="separador-deportes">
            <article>
            <label for="deportes">Escoge un deporte:</label>
            <select id="lista-deportes">
                <option value="0">Seleccione un Deporte</option>
            </select>
            </article>
            <article>
                <label for="ligas">Escoge una liga:</label>
                <select id="lista-ligas"></select>
            </article>
            <article id="open-modal-button">
                <BotonSubmit typeButton="button" color="verde" title="registrar nuevo deporte o liga" />
            </article>
        </div>




        <FormLabelRequired tipo="date" id="Fecha" nombre="FechaApuesta" descripcion="Fecha de la Apuesta"/>
        <FormLabelRequired tipo="text" id="Evento" nombre="Evento" descripcion="Evento apostado"/>
        <FormLabelRequired tipo="text" id="DescripcionApuesta" nombre="DescripcionApuesta" descripcion="Descripcion de la Apuesta"/>
        <FormLabelRequired tipo="text" id="TipoApuesta" nombre="TipoDeLaApuesta" descripcion="Tipo de la Apuesta"/>
        <FormLabelRequired tipo="text" id="Momio" nombre="Momio" descripcion="Momio"/>
        <FormLabelRequired tipo="text" id="Cantidad" nombre="Cantidad" descripcion="Cantidad"/>
        
        <label for="resultado">Resultado:</label>
        <div class="checkbox-group">
            <input type="checkbox" id="ganada" name="resultado" value="ganada">
            <label for="ganada">Ganada</label>
            <input type="checkbox" id="perdida" name="resultado" value="perdida">
            <label for="perdida">Perdida</label>
            <input type="checkbox" id="push" name="resultado" value="push">
            <label for="push">Push</label>
        </div>
        <BotonSubmit typeButton="submit" color="verde" title="Guardar Apuesta" />
    </form>

    <div id="datosFormulario"></div>
    <p id="user"></p>
    <p id="depoid"></p>
    <Boton href="menu" title="regresar" color="verde" />



<!-- Modal for adding a new sport or league -->
<div class="modal" id="modal">
    <div class="modal-header">
        <h2>Registrar nuevo deporte o liga</h2>
        <button id="close-modal-button">&times;</button>
    </div>
    <div class="modal-body">
        <label for="deportess">Escoge un deporte:</label>
        <select id="nueva-lista-deportes">
            <option value="0">Seleccione un Deporte</option>
        </select>
        <label for="ligass">Escoge un deporte:</label>
        <select id="nueva-lista-ligas">
            <option value="0">Seleccione una liga</option>
        </select>
    </div>
    <div class="modal-footer">
        <BotonSubmit typeButton="submit" color="verde" title="Guardar" />
    </div>
</div>

</Layout>

<style>
.form-apuesta {
    display: flex;
    flex-direction: column;
    width: 50%;
    margin: 0 auto;
    border-radius: 8px;
    background-color: var(--bg-gray);
    padding: 30px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.checkbox-group {
    display: flex;
    gap: 1.5rem;
    align-items: center;
}

.checkbox-group label {
    margin-right: 1rem;
}

#separador-deportes {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
}

#datosFormulario {
    margin-top: 20px;
}

.modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 400px;
    background-color: white;
    padding: 20px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    border-radius: 8px;
}

.modal.active {
    display: block;
}

.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.modal-header h2 {
    margin: 0;
}

.modal-body {
    margin-top: 10px;
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.modal-footer {
    margin-top: 20px;
    display: flex;
    justify-content: flex-end;
    gap: 1rem;
}

</style>
<script client:load>
    document.addEventListener('DOMContentLoaded', init);

    // Initial Setup Function
    async function init() {
        const userId = localStorage.getItem('id_usuario');
        if (userId) {
            MostrarIdUsuario(userId);
            await cargarDeportes(userId);
            setupEventListeners();
        } else {
            console.error('ID de usuario no encontrado.');
        }
    }

    // Display the User ID
    function MostrarIdUsuario(userId) {
        const userIdElemento = document.getElementById('user');
        userIdElemento.textContent = `Usuario ID: ${userId}`;
    }
    async function cargarDeportes(userId) {
        const listaDeportes = document.getElementById('lista-deportes');
        try {
            const response = await fetch(`http://localhost:4322/deportes/${userId}`);
            const deportes = await response.json();
            popularDeportes(listaDeportes, deportes);
        } catch (error) {
            console.error('Error obteniendo los deportes:', error);
        }
    }
    function popularDeportes(selectElement, deportes) {
        selectElement.innerHTML = '<option value="0">Seleccione un Deporte</option>';
        deportes.forEach(deporte => {
            const option = document.createElement('option');
            option.value = deporte.id_deporte;
            option.textContent = deporte.nombre_deporte;
            selectElement.appendChild(option);
        });
    }
    function setupEventListeners() {
        document.getElementById('lista-deportes').addEventListener('change', actualizarLigas);
        document.getElementById('form-apuesta').addEventListener('submit', handleSubmit);
        document.querySelectorAll('input[name="resultado"]').forEach(checkbox => {
            checkbox.addEventListener('change', handleCheckboxChange);
        });
        setupModalEventListeners();
    }
    async function handleSubmit(event) {
        event.preventDefault();

        const form = event.target;
        const ligaId = document.getElementById('lista-ligas').value;
        const userId = localStorage.getItem('id_usuario');


        const campos = [
        { id: 'Fecha', name: 'Fecha de la Apuesta' },
        { id: 'Evento', name: 'Evento apostado' },
        { id: 'DescripcionApuesta', name: 'Descripcion de la Apuesta' },
        { id: 'TipoApuesta', name: 'Tipo de la Apuesta' },
        { id: 'Momio', name: 'Momio' },
        { id: 'Cantidad', name: 'Cantidad' },
        { id: 'lista-deportes', name: 'Deporte' },
        { id: 'lista-ligas', name: 'Liga' }
    ];

    for (let field of campos) {
        const value = document.getElementById(field.id).value;
        if (!value || value === '0') {
            alert(`Por favor no deje valores vacios`);
            return;
        }
    }
        if (isNaN(document.getElementById('Momio').value) || isNaN(document.getElementById('Cantidad').value)) {
            alert('Momio y Cantidad deben ser valores numéricos.');
            return;
        }
        const evento = document.getElementById('Evento').value.toUpperCase();
        const descripcionApuesta = document.getElementById('DescripcionApuesta').value.toUpperCase();
        const tipoApuesta = document.getElementById('TipoApuesta').value.toUpperCase();

        const formData = new FormData(form);
            formData.set('Evento', evento);
            formData.set('DescripcionApuesta', descripcionApuesta);
            formData.set('TipoApuesta', tipoApuesta);
            formData.append('usuario', userId);
            formData.append('liga', ligaId);
            formData.append('resultado', getSelectedResultados());

        const data = Object.fromEntries(formData.entries());

        try {
            const response = await fetch('http://localhost:4322/apuesta', {
                method: 'POST',
                body: JSON.stringify(data),
                headers: { 'Content-Type': 'application/json' }
            });

            if (response.ok) {
                alert('Apuesta hecha con éxito');
                form.reset();
            } else {
                const errorData = await response.json();
                alert('Error al guardar la apuesta: ' + (errorData.message || 'Error desconocido'));
            }
        } catch (error) {
            console.error('Error en el envío del formulario:', error);
        }
    }

    // Get Selected Resultados
    function getSelectedResultados() {
        return Array.from(document.querySelectorAll('input[name="resultado"]:checked'))
                    .map(checkbox => checkbox.value)
                    .join(',');
    }

    function handleCheckboxChange() {
        document.querySelectorAll('input[name="resultado"]').forEach(box => {
            if (box !== this) box.checked = false;
        });
    }

    async function actualizarLigas() {
        const selectedDeporteId = document.getElementById('lista-deportes').value;
        const listaLigas = document.getElementById('lista-ligas');
        const userId = localStorage.getItem('id_usuario');

        if (selectedDeporteId) {
            console.log(selectedDeporteId);
            document.getElementById('depoid').textContent = `ID Deporte Seleccionado: ${selectedDeporteId}`;
            try {
                const response = await fetch(`http://localhost:4322/ligas/${userId}/${selectedDeporteId}`);
                const ligas = await response.json();
                popularLigas(listaLigas, ligas);
            } catch (error) {
                console.error('Error obteniendo las ligas:', error);
            }
        }
    }

    // Populate Ligas in Select
    function popularLigas(selectElement, ligas) {
        selectElement.innerHTML = '<option value="0">Seleccione una liga</option>';
        ligas.forEach(liga => {
            const option = document.createElement('option');
            option.value = liga.id_liga;
            option.textContent = liga.nombre_liga;
            selectElement.appendChild(option);
        });
    }

    // Setup Event Listeners for Modal
    function cargar() {
        const modal = document.getElementById('modal');
        const nuevodeporte = document.getElementById('nueva-lista-deportes');
        const nuevaliga = document.getElementById('nueva-lista-ligas');

        document.getElementById('open-modal-button').addEventListener('click', async () => {
            modal.classList.add('active');
            await cargarDeportesModal(nuevodeporte);
        });

        document.getElementById('close-modal-button').addEventListener('click', () => {
            modal.classList.remove('active');
        });

        window.addEventListener('click', event => {
            if (event.target === modal) modal.classList.remove('active');
        });

        nuevodeporte.addEventListener('change', () => actualizarLigasModal(nuevodeporte.value, nuevaliga));

        document.querySelector('.modal-footer button[type="submit"]').addEventListener('click', handleSaveNewLiga);
    }

    async function cargarDeportesModal(selectElement) {
        try {
            const response = await fetch('http://localhost:4322/obtenerdeportes');
            const deportes = await response.json();
            popularDeportes(selectElement, deportes);
        } catch (error) {
            console.error('Error obteniendo los deportes:', error);
        }
    }

    async function actualizarLigasModal(deporteId, selectElement) {
        if (deporteId && deporteId !== '0') {
            try {
                const response = await fetch(`http://localhost:4322/obtenerligas/${deporteId}`);
                const ligas = await response.json();
                popularLigas(selectElement, ligas);
            } catch (error) {
                console.error('Error obteniendo las ligas:', error);
            }
        } else {
            selectElement.innerHTML = '<option value="0">Seleccione una liga</option>';
        }
    }


    async function handleNuevaLiga(event) {
        event.preventDefault();

        const selectedDeporteId = document.getElementById('nueva-lista-deportes').value;
        const selectedLigaId = document.getElementById('nueva-lista-ligas').value;
        const userId = localStorage.getItem('id_usuario');

        if (selectedDeporteId === '0' || selectedLigaId === '0') {
            alert('Por favor, seleccione un deporte y una liga.');
            return;
        }

        try {
            const response = await fetch(`http://localhost:4322/guardarnuevaliga/${userId}/${selectedLigaId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ userId, ligaId: selectedLigaId }),
            });

            if (response.ok) {
                alert('Nueva liga registrada con éxito');
                document.getElementById('modal').classList.remove('active');
            } else {
                const errorData = await response.json();
                alert(`Error al guardar la liga: ${errorData.message || 'Error desconocido'}`);
            }
        } catch (error) {
            console.error('Error al guardar la nueva liga:', error);
            alert('Error al guardar la nueva liga');
        }
    }
</script>
