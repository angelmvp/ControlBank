---
import Boton from "../components/Boton.astro"
import Layout from "../layouts/Layout.astro"
import FormLabelRequired from "../components/Apuestalabel.astro"
import BotonSubmit from "../components/BotonSubmit.astro"
---

<Layout title="Nueva Apuesta">
    <Boton href="menu" title="regresar" color="verde" />
    <form action="/submit-bet" method="post" class="form-apuesta">
            <label for="deportes">Escoge un deporte:</label>
            <select id="lista-deportes"></select>
            <label for="ligas">Escoge una liga:</label>
            <select id="lista-ligas"></select>


        <FormLabelRequired tipo="date" id="Fecha" nombre="FechaApuesta" descripcion="Fecha de la Apuesta"/>
        <FormLabelRequired tipo="text" id="NombreApuesta" nombre="NombreDeApuesta" descripcion="Nombre de la Apuesta"/>
        <FormLabelRequired tipo="text" id="TipoApuesta" nombre="TipoDeLaApuesta" descripcion="Tipo de la Apuesta"/>
        <FormLabelRequired tipo="text" id="Momio" nombre="Momio" descripcion="Momio"/>
        <FormLabelRequired tipo="text" id="Cantidad" nombre="Cantidad" descripcion="Cantidad"/>
        
        <label for="resultado">Resultado:</label>
        <div class="checkbox-group">
            <input type="checkbox" id="ganada" name="resultado" value="ganada">
            <label for="ganada">Ganada</label>
            <input type="checkbox" id="perdida" name="resultado" value="perdida">
            <label for="perdida">Perdida</label>
            <input type="checkbox" id="push" name="resultado" value="push">
            <label for="push">Push</label>
        </div>
        <BotonSubmit typeButton="submit" color="verde" title="Guardar Apuesta" />
    </form>
    <p id="user"></p>
    <Boton href="menu" title="regresar" color="verde" />
    <p id="depoid"></p>
</Layout>

<style>
.form-apuesta {
    display: flex;
    flex-direction: column;
    width: 50%;
    margin: 0 auto;
    border-radius: 8px;
    background-color: var(--bg-gray);
    padding: 30px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.checkbox-group {
    display: flex;
    gap: 1rem;
    align-items: center;
}

.checkbox-group input[type="checkbox"] {
    margin-right: 0.5rem;
}

.submit-button {
    background-color: var(--primary-green);
    color: white;
    padding: 0.75rem;
    border: none;
    border-radius: 4px;
    font-size: 1rem;
    cursor: pointer;
}

.submit-button:hover {
    background-color: var(--green-dark);
}
</style>
<script client:load>
    document.addEventListener('DOMContentLoaded', async () => {
        const userId = localStorage.getItem('id_usuario');
        const listaDeportes = document.getElementById('lista-deportes');
        
        if (userId) {
            const userIdElemento = document.getElementById('user');
            userIdElemento.textContent = `Usuario ID: ${userId}`; // Mostrar el ID del usuario
            try {
                const response = await fetch(`http://localhost:4322/deportes/${userId}`);
                const deportes = await response.json();
                deportes.forEach(deporte => {
                    const option = document.createElement('option');
                    option.value = deporte.id_deporte;
                    option.textContent = deporte.nombre_deporte;
                    listaDeportes.appendChild(option);
                });
                console.log('Deportes cargados:', deportes); // Verifica los deportes cargados
            } catch (error) {
                console.error('Error obteniendo los deportes:', error);
            }
        }
    
        // Agregar el manejador de eventos para el cambio en el select de deportes
        listaDeportes.addEventListener('change', actualizarLigas);
    });
        
    function actualizarLigas() {
        const listaDeportes = document.getElementById('lista-deportes');
        const selectedDeporteId = listaDeportes.value; // Obtener el ID del deporte seleccionado
        const listaLigas = document.getElementById('lista-ligas');
        const userId = localStorage.getItem('id_usuario');
        const depoid = document.getElementById('depoid');
        
        console.log('Deporte seleccionado:', selectedDeporteId);
        
        if (!selectedDeporteId) {
            console.error('No se ha seleccionado un deporte.');
            return;
        }
    
        depoid.textContent = `ID Deporte Seleccionado: ${selectedDeporteId}`;
        
        if (userId) {
            fetch(`http://localhost:4322/ligas/${userId}/${selectedDeporteId}`)
            .then(response => response.json())
            .then(ligas => {
                listaLigas.innerHTML = ''; // Limpiar la lista antes de agregar nuevas ligas
                ligas.forEach(liga => {
                    const option = document.createElement('option');
                    option.value = liga.id_liga;
                    option.textContent = liga.nombre_liga;
                    listaLigas.appendChild(option);
                });
            })
            .catch((error) => {
                console.error('Error obteniendo las ligas:', error);
            });
        } else {
            console.error('ID de usuario no encontrado.');
        }
    }
    </script>