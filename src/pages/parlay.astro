---
import Boton from "../components/Boton.astro"
import Layout from "../layouts/Layout.astro"
import FormLabelRequired from "../components/Apuestalabel.astro"
import BotonSubmit from "../components/BotonSubmit.astro"
---

<Layout title="Nuevo Parlay">
    <Boton href="menu" title="regresar" color="verde" />
    <FormLabelRequired tipo="text" id="cantidad" nombre="cantidad" descripcion="Cantidad"/>

    <BotonSubmit typeButton="button" color="verde" title="registrar parlay" />
    <form class="form-apuesta" id="bet-forms">
        <div id="separador-deportes">
            <article>
            <label for="deportes">Escoge un deporte:</label>
            <select id="lista-deportes">
                <option value="0">Seleccione un Deporte</option>
            </select>
            </article>
            <article>
                <label for="ligas">Escoge una liga:</label>
                <select id="lista-ligas"></select>
            </article>
        </div>




        <FormLabelRequired tipo="date" id="Fecha" nombre="FechaApuesta" descripcion="Fecha de la Apuesta"/>
        <FormLabelRequired tipo="text" id="Evento" nombre="Evento" descripcion="Evento apostado"/>
        <FormLabelRequired tipo="text" id="DescripcionApuesta" nombre="DescripcionApuesta" descripcion="Descripcion de la Apuesta"/>
        <FormLabelRequired tipo="text" id="TipoApuesta" nombre="TipoApuesta" descripcion="Tipo de la Apuesta"/>
        <FormLabelRequired tipo="text" id="Momio" nombre="Momio" descripcion="Momio"/>
        <FormLabelRequired tipo="text" id="Cantidad" nombre="Cantidad" descripcion="Cantidad"/>
        
        <label for="resultado">Resultado:</label>
        <div class="checkbox-group">
            <input type="checkbox" id="ganada" name="resultado" value="ganada">
            <label for="ganada">Ganada</label>
            <input type="checkbox" id="perdida" name="resultado" value="perdida">
            <label for="perdida">Perdida</label>
            <input type="checkbox" id="push" name="resultado" value="push">
            <label for="push">Push</label>
        </div>
        
        <button type="button" id="add-bet-button" class="add-button">Agregar Apuesta</button>
        
    </form>
    <Boton href="menu" title="regresar" color="verde" />

    <p id="depoid"></p>
</Layout>


<style>
    .form-apuesta {
        display: flex;
        flex-direction: column;
        width: 50%;
        margin: 0 auto;
        border-radius: 8px;
        background-color: var(--bg-gray);
        padding: 30px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    
    .checkbox-group {
        display: flex;
        gap: 1.5rem;
        align-items: center;
    }
    
    .checkbox-group label {
        margin-right: 1rem;
    }
    
    #separador-deportes {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 1rem;
    }
    
    #datosFormulario {
        margin-top: 20px;
    }
</style>
<script>
   document.addEventListener('DOMContentLoaded', init);

// Initial Setup Function
async function init() {
    const userId = localStorage.getItem('id_usuario');
    if (userId) {
        MostrarIdUsuario(userId);
        await cargarDeportes(userId);
        setupEventListeners();
    } else {
        console.error('ID de usuario no encontrado.');
    }
}

// Display the User ID
function MostrarIdUsuario(userId) {
    const userIdElemento = document.getElementById('user');
    if(userIdElemento)
    userIdElemento.textContent = `Usuario ID: ${userId}`;
}

function setupEventListeners() {
    document.getElementById('lista-deportes').addEventListener('change', actualizarLigas);
    document.querySelectorAll('input[name="resultado"]').forEach(checkbox => {
        checkbox.addEventListener('change', handleCheckboxChange);
    });
    document.getElementById('add-bet-button').addEventListener('click', agregarMasApuestas);
    
    // Attach event listeners to dynamically added forms
    document.querySelectorAll('.bet-form .lista-deportes').forEach(select => {
        select.addEventListener('change', actualizarLigas);
    });
    document.querySelectorAll('.bet-form .checkbox-group input').forEach(checkbox => {
        checkbox.addEventListener('change', handleCheckboxChange);
    });
}

function getSelectedResultados() {
        return Array.from(document.querySelectorAll('input[name="resultado"]:checked'))
                    .map(checkbox => checkbox.value)
                    .join(',');
    }

    function handleCheckboxChange() {
        document.querySelectorAll('input[name="resultado"]').forEach(box => {
            if (box !== this) box.checked = false;
        });
    }


    async function handleSubmit(event) {
    event.preventDefault();

    const form = event.target;
    const userId = localStorage.getItem('id_usuario');

    try {
        // Paso 1: Crear el Parlay
        const parlayResponse = await fetch('http://localhost:4322/parlay', {
            method: 'POST',
            body: JSON.stringify({
                fecha: new Date().toISOString().split('T')[0], // Fecha actual
                momio: "calcular momio",
                cantidad_apostada: document.getElementById('cantidad').value,
                resultado: 'ganada', // Puedes ajustar esto según la lógica
                usuarioId: userId
            }),
            headers: { 'Content-Type': 'application/json' }
        });

        if (!parlayResponse.ok) {
            throw new Error('Error al crear el parlay');
        }

        const parlayData = await parlayResponse.json();
        const parlayId = parlayData.id_parlay; // Suponiendo que el backend devuelve el ID

        // Paso 2: Registrar cada Apuesta
        const betForms = document.querySelectorAll('.bet-form');
        for (let form of betForms) {
            const formData = new FormData(form);
            formData.append('usuario_id', userId);
            formData.append('parlay_id', parlayId);

            const data = Object.fromEntries(formData.entries());

            const apuestaResponse = await fetch('http://localhost:4322/apuesta', {
                method: 'POST',
                body: JSON.stringify(data),
                headers: { 'Content-Type': 'application/json' }
            });

            if (!apuestaResponse.ok) {
                throw new Error('Error al guardar la apuesta');
            }
        }
        alert('Parlay y apuestas registradas con éxito');
    } catch (error) {
        console.error('Error en el envío del formulario:', error);
        alert('Error al registrar el parlay: ' + error.message);
    }
}


async function cargarDeportes(userId) {
        const listaDeportes = document.getElementById('lista-deportes');
        try {
            const response = await fetch(`http://localhost:4322/deportes/${userId}`);
            const deportes = await response.json();
            popularDeportes(listaDeportes, deportes);
        } catch (error) {
            console.error('Error obteniendo los deportes:', error);
        }
    }
    function popularDeportes(selectElement, deportes) {
        selectElement.innerHTML = '<option value="0">Seleccione un Deporte</option>';
        deportes.forEach(deporte => {
            const option = document.createElement('option');
            option.value = deporte.id_deporte;
            option.textContent = deporte.nombre_deporte;
            selectElement.appendChild(option);
        });
    }
    async function actualizarLigas() {
        const selectedDeporteId = document.getElementById('lista-deportes').value;
        const listaLigas = document.getElementById('lista-ligas');
        const userId = localStorage.getItem('id_usuario');

        if (selectedDeporteId) {
            console.log(selectedDeporteId);
            document.getElementById('depoid').textContent = `ID Deporte Seleccionado: ${selectedDeporteId}`;
            try {
                const response = await fetch(`http://localhost:4322/ligas/${userId}/${selectedDeporteId}`);
                const ligas = await response.json();
                popularLigas(listaLigas, ligas);
            } catch (error) {
                console.error('Error obteniendo las ligas:', error);
            }
        }
    }

    // Populate Ligas in Select
    function popularLigas(selectElement, ligas) {
        selectElement.innerHTML = '<option value="0">Seleccione una liga</option>';
        ligas.forEach(liga => {
            const option = document.createElement('option');
            option.value = liga.id_liga;
            option.textContent = liga.nombre_liga;
            selectElement.appendChild(option);
        });
    }


    function agregarMasApuestas() {
    const betForms = document.getElementById('bet-forms');
    if (!betForms) return;

    const betForm = document.createElement('div');
    betForm.classList.add('bet-form');
    betForm.innerHTML = `
        <div id="separador-deportes">
            <article>
                <label for="deportes">Escoge un deporte:</label>
                <select class="lista-deportes">
                    <option value="0">Seleccione un Deporte</option>
                </select>
            </article>
            <article>
                <label for="ligas">Escoge una liga:</label>
                <select class="lista-ligas"></select>
            </article>
        </div>
        <FormLabelRequired tipo="date" id="Fecha" nombre="FechaApuesta" descripcion="Fecha de la Apuesta"/>
        <FormLabelRequired tipo="text" id="Evento" nombre="Evento" descripcion="Evento apostado"/>
        <FormLabelRequired tipo="text" id="DescripcionApuesta" nombre="DescripcionApuesta" descripcion="Descripcion de la Apuesta"/>
        <FormLabelRequired tipo="text" id="TipoApuesta" nombre="TipoApuesta" descripcion="Tipo de la Apuesta"/>
        <FormLabelRequired tipo="text" id="Momio" nombre="Momio" descripcion="Momio"/>
        <FormLabelRequired tipo="text" id="Cantidad" nombre="Cantidad" descripcion="Cantidad"/>
        <label for="resultado">Resultado:</label>
        <div class="checkbox-group">
            <input type="checkbox" name="resultado" value="ganada">
            <label>Ganada</label>
            <input type="checkbox" name="resultado" value="perdida">
            <label>Perdida</label>
            <input type="checkbox" name="resultado" value="push">
            <label>Push</label>
        </div>
    `;
    betForms.appendChild(betForm);
    
    // Re-setup event listeners for newly added forms
    setupEventListeners();
    }
</script>


